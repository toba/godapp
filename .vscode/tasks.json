{
   "version": "2.0.0",
   "tasks": [
      {
         "taskName": "Run Server",
         "command": "go run ./main.go ./token.go",
         "group": "build",
         "problemMatcher": [
            "$go"
         ],
         "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "dedicated"
         }
      },
      {
         "taskName": "Ethereum Test Network",
         "command": "geth",
         "args": [
            "--testnet",
            "--fast",
            "--cache=512",
            "console"
         ],
         "group": "none"
      },
      {
         "taskName": "Ethereum Rinkeby Network",
         "command": "geth",
         "args": [
            "--networkid=4",
            "--datadir=${env:HOME}/.rinkeby",
            "--cache=512",
            "--ethstats=\"yournode:Respect my authoritah!@stats.rinkeby.io\"",
            "--bootnodes=enode://a24ac7c5484ef4ed0c5eb2d36620ba4e4aa13b8c84684e1b4aab0cebea2ae45cb4d375b77eab56516d34bfbd3c1a833fc51296ff084b770b94fb9028c4d25ccf@52.169.42.101:30303",
            "--rpc",
            "--rpcapi=\"personal,eth,network\""
         ],
         "group": "none",
         "windows": {
            "options": {
               "env": {
                  "HOME": "${env:APPDATA}"
               }
            }
         }
      },
      {
         "taskName": "Generate Go Contract Binding",
         "command": "abigen",
         "args": [
            "--sol ./contracts/bookmark.sol",
            "--pkg contracts",
            "--out ./contracts/bookmark.go"
         ],
         "group": "build",
         "problemMatcher": [
            "$go"
         ]
      },
      {
         "taskName": "Build for Heroku",
         "command": "go build -o ./bin/toba ./cmd/server/main.go",
         "type": "shell",
         "group": "none",
         "problemMatcher": [],
         "options": {
            "env": {
               "GOOS": "linux",
               "GOARCH": "amd64"
            }
         }
      },
      {
         "taskName": "Deploy to Heroku",
         "command": "git push heroku master",
         "type": "shell",
         "group": "none",
         "problemMatcher": []
      },
      {
         "taskName": "Download Rinkeby Genesis",
         "command": "wget -O ./genesis/rinkeby.json https://www.rinkeby.io/rinkeby.json",
         "windows": {
            "command": "wget https://www.rinkeby.io/rinkeby.json -OutFile ./genesis/rinkeby.json"
         },
         "problemMatcher": []
      },
      {
         "taskName": "Initialize Rinkeby",
         "command": "geth",
         "args": [
            "--datadir=${env:HOME}/.rinkeby",
            "init ./genesis/rinkeby.json"
         ],
         "windows": {
            // "args": [
            //    "--datadir=${env:APPDATA}\\.rinkeby",
            //    "init ./genesis/rinkeby.json"
            // ],
            "options": {
               "env": {
                  "HOME": "${env:APPDATA}"
               }
            }
         },
         "problemMatcher": [
            "$go"
         ]
      },
      {
         "taskName": "Webpack",
         "command": "node_modules/.bin/webpack",
         "type": "shell"
      },
      {
         "taskName": "Webpack Watch",
         "command": "node_modules/.bin/webpack",
         "args": [
            "--watch",
            "--display-error-details"
         ],
         "type": "shell",
         "group": "build",
         "problemMatcher": [
            "$tsc-watch"
         ],
         "presentation": {
            "echo": true,
            "reveal": "always",
            "focus": false,
            "panel": "dedicated"
         }
      },
      {
         "taskName": "Test TypeScript",
         "options": {
            "env": {
               "TS_NODE_COMPILER_OPTIONS": "{\"module\": \"commonjs\", \"target\": \"es5\"}"
            }
         },
         "command": "node_modules/.bin/mocha",
         "args": [
            "--compilers ts:ts-node/register,tsx:ts-node/register",
            "--require ts-node/register",
            "--require ignore-styles",
            "--require tsconfig-paths/register",
            "./**/*.test.ts*"
         ],
         "group": "test",
         "problemMatcher": [
            "$tsc"
         ]
      }
   ]
}